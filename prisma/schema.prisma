// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TRABAJADOR
}

enum EstadoTareas {
  PENDIENTE
  EN_PROCESO
  COMPLETADA
}

enum EstadoFacturas {
  PENDIENTE
  EN_PROCESO
  PAGADO
  ARCHIVADO
}

// Tablas para agregar Token mas seguros
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user Usuario @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

// Tablas de sesiones para NextAuth - valida sesiones en la base de Datos
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Usuario {
  id                    String               @id @default(cuid())
  name                  String
  correo                String               @unique
  password              String
  contacto              String
  activo                Boolean              @default(true)
  role                  Role                 @default(TRABAJADOR)
  tareaAsignada         Tarea[]
  asigFacturaCliente    FacturaCliente[]
  asigFacturaProveedor  FacturaProveedor[]
  // Relaciones para NextAuth
  accounts              Account[]
  sessions              Session[]

  @@map("usuarios")
  @@index([correo])
}

model Cliente {
  id                    String                @id @default(cuid())
  name                  String
  correo                String                @unique
  direccion             String?
  contacto              String?
  factura               FacturaCliente[]

  @@map("clientes")
}

model Proveedor {
  id                    String                @id @default(cuid())
  name                  String
  correo                String                @unique
  direccion             String?
  contacto              String?
  factura               FacturaProveedor[]

  @@map("proveedores")
}

model Tarea {
  id                    String                @id @default(cuid())
  titulo                String
  descripcion           String
  estado                EstadoTareas
  fechaLimite           DateTime?
  asignadoAId           String
  asignadoA             Usuario               @relation(fields: [asignadoAId], references: [id])

  @@map("tareas")
  @@index([asignadoAId])
  @@index([estado])
}

model FacturaCliente {
  id                    String                @id @default(cuid())
  numFactura            String                @unique
  fechaCreacion         DateTime              @default(now())
  fechaVencimiento      DateTime
  estado                EstadoFacturas
  clienteId             String
  client                Cliente               @relation(fields: [clienteId], references: [id])
  asignadoAId           String
  asignadoA             Usuario               @relation(fields: [asignadoAId], references: [id])

  @@map("facturas_clientes")
  @@index([clienteId])
  @@index([asignadoAId])
  @@index([estado])  
}

model FacturaProveedor {
  id                    String                @id @default(cuid())
  numFactura            String                @unique
  fechaCreacion         DateTime              @default(now())
  fechaVencimiento      DateTime
  estado                EstadoFacturas
  proveedorId           String
  proveedor             Proveedor             @relation(fields: [proveedorId], references: [id])
  asignadoAId           String
  asignadoA             Usuario               @relation(fields: [asignadoAId], references: [id])

  @@map("facturas_proveedores")
  @@index([proveedorId])
  @@index([asignadoAId])
  @@index([estado])
}